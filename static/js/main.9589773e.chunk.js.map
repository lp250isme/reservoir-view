{"version":3,"sources":["global/contants.js","components/Header.js","image/Water-droplets.png","components/ReservoirDetail.js","components/ReservoirItem.js","components/ReservoirList.js","App.js","index.js"],"names":["API_HOST","API_GET_RESERVOIR_STATION","API_GET_RESERVOIR_REALTIME_INFO","Header","className","setData","StationNo","a","fetch","res","json","data","PercentageOfStorage","toFixed","library","add","faTint","ReservoirDetail","reservoirItem","useState","useEffect","fetchData","color1","waterWarningText","fillColor","interpolateRgb","interpolate","gradientStops","key","stopColor","color","darker","toString","stopOpacity","offset","brighter","colSpan","style","margin","width","radius","height","value","percent","textSize","textOffsetX","textOffsetY","textRenderer","props","Math","round","min","textPixels","valueStyle","fontSize","percentStyle","riseAnimation","waveAnimation","waveFrequency","waveAmplitude","gradient","circleStyle","fill","waveStyle","textStyle","fontFamily","waveTextStyle","backgroundColor","WaterHeight","BasinName","Time","faPlus","faMinus","ReservoirItem","idx","StationName","showResults","setShowResults","onClick","icon","prev","console","log","animationIn","animationOut","isVisible","ReservoirList","map","index","App","clickShowMore","useRef","current","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9589773e.chunk.js","sourcesContent":["export const API_HOST = \"https://fhy.wra.gov.tw/WraApi\";\r\nexport const API_GET_BASIC_CITY = `${API_HOST}/v1/Basic/City`;\r\n// export const API_GET_RESERVOIR_STATION = `${API_HOST}/v1/Reservoir/Station`;\r\nexport const API_GET_RESERVOIR_STATION = `${API_HOST}/v1/Reservoir/Station?$filter=Importance eq 1`;\r\nexport const API_GET_RESERVOIR_REALTIME_INFO = `${API_HOST}/v1/Reservoir/RealTimeInfo?$filter=`;\r\n// export const API_GET_RESERVOIR_STATION = `${API_HOST}/v1/Reservoir/RealTimeInfo StationNo `;\r\n// \"/v1/Reservoir/RealTimeInfo?$filter=StationNo eq 10201\"\r\n\r\n// gt, lt, ge, le\r\n","const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>全台水庫表</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Water-droplets.ae4b2819.png\";","import { React, useState, useEffect, useRef } from \"react\";\r\nimport { API_GET_RESERVOIR_REALTIME_INFO } from \"../global/contants\";\r\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport water from \"../image/Water-droplets.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTint } from \"@fortawesome/free-solid-svg-icons\";\r\nimport LiquidFillGauge from \"react-liquid-gauge\";\r\nimport { interpolateRgb } from \"d3-interpolate\";\r\nimport { color } from \"d3-color\";\r\n\r\nlibrary.add(faTint);\r\n\r\nasync function fetchData(setData, StationNo) {\r\n  try {\r\n    const res = await fetch(API_GET_RESERVOIR_REALTIME_INFO + \"StationNo%20eq%20'\" + StationNo + \"'\");\r\n    // const { data } = await res.json();\r\n    const data = await res.json();\r\n    data[0].PercentageOfStorage = data[0].PercentageOfStorage.toFixed(2);\r\n    setData(data);\r\n  } catch (error) {}\r\n}\r\n\r\nconst ReservoirDetail = ({ reservoirItem, StationNo }) => {\r\n  const [data, setData] = useState([0]);\r\n  useEffect(() => {\r\n    fetchData(setData, StationNo);\r\n  }, []);\r\n\r\n  let color1 = \"#3f98c7\";\r\n  let waterWarningClass = \"topTitle\";\r\n  let waterWarningText = \"水量正常\";\r\n  if (data[0].PercentageOfStorage <= 20) {\r\n    color1 = \"#ff5e00db\";\r\n    waterWarningText = \"水量不足\";\r\n  }\r\n\r\n  const radius = 75;\r\n  const interpolate = interpolateRgb(color1, color1);\r\n  const fillColor = interpolate(50 / 100);\r\n  const gradientStops = [\r\n    {\r\n      key: \"0%\",\r\n      stopColor: color(fillColor).darker(0.5).toString(),\r\n      stopOpacity: 1,\r\n      offset: \"0%\",\r\n    },\r\n    {\r\n      key: \"50%\",\r\n      stopColor: fillColor,\r\n      stopOpacity: 0.75,\r\n      offset: \"50%\",\r\n    },\r\n    {\r\n      key: \"100%\",\r\n      stopColor: color(fillColor).brighter(0.5).toString(),\r\n      stopOpacity: 0.5,\r\n      offset: \"100%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"detail\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          {/* <tr>\r\n            <td className=\"topTitle\" colSpan=\"2\">\r\n              詳細資料\r\n            </td>\r\n          </tr> */}\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td colSpan=\"2\" className=\"progressBar\">\r\n              <LiquidFillGauge\r\n                style={{ margin: \"0 auto\" }}\r\n                width={radius * 2}\r\n                height={radius * 2}\r\n                value={data[0].PercentageOfStorage}\r\n                percent=\"%\"\r\n                textSize={1}\r\n                textOffsetX={0}\r\n                textOffsetY={0}\r\n                textRenderer={(props) => {\r\n                  const value = Math.round(props.value);\r\n                  const radius = Math.min(props.height / 2, props.width / 2);\r\n                  const textPixels = (props.textSize * radius) / 2;\r\n                  const valueStyle = {\r\n                    fontSize: textPixels,\r\n                  };\r\n                  const percentStyle = {\r\n                    fontSize: textPixels * 0.6,\r\n                  };\r\n\r\n                  return (\r\n                    <tspan>\r\n                      <tspan className=\"value\" style={valueStyle}>\r\n                        {value}\r\n                      </tspan>\r\n                      <tspan style={percentStyle}>{props.percent}</tspan>\r\n                    </tspan>\r\n                  );\r\n                }}\r\n                riseAnimation\r\n                waveAnimation\r\n                waveFrequency={2}\r\n                waveAmplitude={1}\r\n                gradient\r\n                gradientStops={gradientStops}\r\n                circleStyle={{\r\n                  fill: fillColor,\r\n                }}\r\n                waveStyle={{\r\n                  fill: fillColor,\r\n                }}\r\n                textStyle={{\r\n                  fill: color(\"#444\").toString(),\r\n                  fontFamily: \"Arial\",\r\n                }}\r\n                waveTextStyle={{\r\n                  fill: color(\"#fff\").toString(),\r\n                  fontFamily: \"Arial\",\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td colSpan=\"2\" style={{ backgroundColor: color1, color: \"white\" }} className={waterWarningClass}>\r\n              {waterWarningText}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"title\">蓄水百分比</td>\r\n            <td className=\"data\">{data[0].PercentageOfStorage} %</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"title\">水位高</td>\r\n            <td className=\"data\">{data[0].WaterHeight} 公尺</td>\r\n          </tr>\r\n          {/* <tr>\r\n            <td className=\"title\">有效蓄水量</td>\r\n            <td className=\"data\">{data[0].EffectiveStorage} 萬立方公尺</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"title\">有效容量</td>\r\n            <td className=\"data\">{reservoirItem.EffectiveCapacity} 萬立方公尺</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"title\">總蓄水量</td>\r\n            <td className=\"data\">{reservoirItem.Storage} 萬立方公尺</td>\r\n          </tr> */}\r\n          <tr>\r\n            <td className=\"title\">流域名稱</td>\r\n            <td className=\"data\">{reservoirItem.BasinName}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"title\">更新時間</td>\r\n            <td className=\"data\">{data[0].Time}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservoirDetail;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReservoirDetail from \"./ReservoirDetail.js\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faPlus, faMinus);\r\n\r\nconst ReservoirItem = ({ idx, StationName, StationNo, reservoirItem }) => {\r\n  //console.log(\"cityName\", cityName);\r\n\r\n  const [showResults, setShowResults] = useState([false, false]);\r\n\r\n  const show = (StationNo) => {\r\n    setShowResults(function (prev) {\r\n      console.log(\"prev\", prev);\r\n    });\r\n    const showResults = [true, true];\r\n    setShowResults(showResults);\r\n    // console.log(\"StationNo\", StationNo);\r\n    // console.log(\"showResults\", showResults);\r\n  };\r\n\r\n  const hide = (StationNo) => {\r\n    const showResults = [false, false];\r\n    setShowResults(showResults);\r\n    // console.log(\"StationNo\", StationNo);\r\n    // console.log(\"showResults\", showResults);\r\n  };\r\n\r\n  return (\r\n    <div key={StationNo} className=\"itemsOutter\">\r\n      <div className=\"items\">\r\n        <p>\r\n          {idx + 1}. {StationName}\r\n        </p>\r\n        {showResults[0] ? (\r\n          // <button onClick={() => hide(StationNo)}>隱藏</button>\r\n          <div onClick={() => hide(StationNo)}>\r\n            <FontAwesomeIcon icon=\"minus\" />\r\n          </div>\r\n        ) : (\r\n          // <button onClick={() => show(StationNo)}>詳細</button>\r\n          <div onClick={() => show(StationNo)}>\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {showResults[1] ? (\r\n        <Animated animationIn=\"zoomIn\" animationOut=\"zoomOut\" isVisible={true}>\r\n          <ReservoirDetail reservoirItem={reservoirItem} StationNo={StationNo} />\r\n        </Animated>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservoirItem;\r\n","import ReservoirItem from \"./ReservoirItem\";\r\n\r\nconst ReservoirList = ({ ReservoirList }) => {\r\n  return (\r\n    <div className=\"cityList\">\r\n      {ReservoirList.map((reservoirItem, index) => {\r\n        const { StationNo, StationName } = reservoirItem;\r\n        return (\r\n          <ReservoirItem\r\n            idx={index}\r\n            key={StationNo}\r\n            StationNo={StationNo}\r\n            StationName={StationName}\r\n            reservoirItem={reservoirItem}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservoirList;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { API_GET_RESERVOIR_STATION } from \"./global/contants\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport ReservoirList from \"./components/ReservoirList\";\n\nasync function fetchData(setData) {\n  const res = await fetch(API_GET_RESERVOIR_STATION);\n  // const { data } = await res.json();\n  const data = await res.json();\n  setData(data);\n  //console.log(\"data\", data);\n}\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const clickShowMore = useRef(false);\n\n  useEffect(() => {\n    if (!clickShowMore.current) {\n      return;\n    }\n  }, [data]);\n\n  useEffect(() => {\n    fetchData(setData);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header title=\"\" />\n      <ReservoirList ReservoirList={data} />\n      {/* <CityList CityList={data} /> */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}